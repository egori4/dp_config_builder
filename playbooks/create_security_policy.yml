---
# Security Policy Creation Orchestrator Playbook
# This playbook creates all prerequisite components then creates security policies with profile bindings

# Device locking at the beginning for orchestrated flows
- name: "Centralized Device Locking for Orchestration"
  hosts: cc
  gather_facts: no
  vars_files:
    - ../vars/cc.yml
    - ../vars/create_vars.yml
  
  tasks:
    - name: "Lock device(s) for orchestrated creation"
      dp_lock:
        provider: "{{ cc }}"
        dp_ip: "{{ item }}"
      loop: "{{ dp_ip }}"
      when: security_policy_config.create_security_policies | default(false)

# Import existing playbooks for prerequisite components
- import_playbook: create_network_class.yml
  vars:
    skip_policy_updates: true  # Orchestrator will handle policy updates at the end
    skip_device_lock: true     # Orchestrator handles device locking centrally
  when: security_policy_config.create_network_classes | default(false)

- import_playbook: create_cl_profiles.yml
  vars:
    skip_policy_updates: true  # Orchestrator will handle policy updates at the end
    skip_device_lock: true     # Orchestrator handles device locking centrally
  when: security_policy_config.create_cl_profiles | default(false)

# Main security policy creation playbook
- name: "Create DefensePro Security Policies"
  hosts: cc
  gather_facts: no
  vars_files:
    - ../vars/cc.yml
    - ../vars/create_vars.yml
  
  tasks:
    - block:
        - name: "Create DefensePro security policies"
          create_security_policy:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
            security_policies: "{{ security_policies }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Device: {{ item }}"
          register: security_policy_results
          when: security_policy_config.create_security_policies | default(false)

        - name: "Display security policy creation results"
          vars:
            formatted_output: |
              Device: {{ item.item }}
              {% if item.response.preview_mode | default(false) %}
              PREVIEW MODE - Operations that would be performed:
              {% set planned_ops = item.response.planned_operations | default([]) %}
              {% if planned_ops %}
              
              Security Policy Creations ({{ planned_ops | length }} planned):
              {% for op in planned_ops %}
                - Policy: {{ op.policy_name }} ({{ op.src_network }} -> {{ op.dst_network }})
              {% if op.connection_limit_profile %}
                  CL Profile: {{ op.connection_limit_profile }}
              {% endif %}
              {% endfor %}
              {% else %}
              
              No security policies configured for creation.
              {% endif %}
              {% else %}
              EXECUTION RESULTS:
              {% set created_policies = item.response.created_policies | default([]) %}
              {% set errors = item.response.errors | default([]) %}
              {% set summary = item.response.summary | default({}) %}
              {% if created_policies %}
              
              Security Policies ({{ summary.successful_policies | default(0) }}/{{ summary.total_policies_attempted | default(0) }} successful):
              {% for policy in created_policies %}
                - {{ policy.policy_name }}: {{ policy.src_network }} -> {{ policy.dst_network }} ({{ policy.direction }}{% if policy.priority is defined %}, Priority: {{ policy.priority }}{% endif %})
              {% if policy.connection_limit_profile %}
                  CL Profile: {{ policy.connection_limit_profile }}
              {% endif %}
              {% endfor %}
              {% endif %}
              {% if errors %}
              
              Errors ({{ errors | length }} occurred):
              {% for error in errors %}
                - {{ error }}
              {% endfor %}
              {% endif %}
              {% if not created_policies and not errors %}
              
              No security policies configured for creation.
              {% endif %}
              {% endif %}
          debug:
            msg: "{{ formatted_output.split('\n') }}"
          loop: "{{ security_policy_results.results }}"
          loop_control:
            label: "Device: {{ item.item }}"
          when: 
            - security_policy_config.create_security_policies | default(false)
            - security_policy_results is defined
            - security_policy_results.results is defined

        - name: "Apply policy updates per device"
          update_policies:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Applying policies: {{ item }}"
          when: 
            - security_policy_config.create_security_policies | default(false)
            - security_policy_config.apply_policies_after_creation | default(true)

      always:
        - name: "Unlock device(s)"
          dp_unlock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"

    - name: "Display security policy creation status"
      debug:
        msg: "No policies were configured - creation is disabled (create_security_policies variable is set to false)."
      when: not (security_policy_config.create_security_policies | default(false))

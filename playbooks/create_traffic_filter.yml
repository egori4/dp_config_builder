---
- name: Create Traffic Filter profiles and protections
  hosts: cc
  gather_facts: false
  vars_files:
    - ../vars/cc.yml
    - ../vars/create_vars.yml

  tasks:
    - name: Create Traffic Filter profiles and protections block
      block:
        - name: Lock device(s)
          dp_lock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          when: not (skip_device_lock | default(false))

        - name: Configure Traffic Filter profiles and protections
          create_traffic_filter:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
            tf_profiles: "{{ create_tf_profiles | default([]) }}"
            tf_protections: "{{ create_tf_protections | default([]) }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Device: {{ item }}"
          register: TF_create_results

        - name: Display Traffic Filter creation results
          vars:
            formatted_output: |
              Device: {{ item.item }}
              {% if item.response.preview_mode | default(false) %}
              PREVIEW MODE - Planned operations:
              {% set planned_ops = item.response.planned_operations | default([]) %}
              {% if planned_ops %}
              Planned Traffic Filter Operations ({{ planned_ops | length }} total):
              {% for op in planned_ops %}
                - Type: {{ op.type | default('unknown') }}
                  {% for k, v in op.params.items() %}
                  - {{ k }}: {{ v }}
                  {% endfor %}
              {% endfor %}
              {% else %}
              No Traffic Filter operations configured for creation.
              {% endif %}
              {% else %}
              EXECUTION RESULTS:
              {% if item.failed | default(false) %}
              Error occurred during creation:
                - {{ item.msg | default('Unknown error') }}
              {% else %}
              {% if item.response.created_profiles | default([]) %}
              Traffic Filter Profiles created successfully:
              {% for prof in item.response.created_profiles %}
                - {{ prof.profile_name }}
                  Parameters:
                  {% for k, v in prof.user_friendly.items() %}
                  - {{ k }}: {{ v }}
                  {% endfor %}
              {% endfor %}
              {% else %}
              No Traffic Filter profiles were created.
              {% endif %}

              {% if item.response.created_protections | default([]) %}
              Traffic Filter Protections created successfully:
              {% for prot in item.response.created_protections %}
                - Profile: {{ prot.profile_name }}
                  Protection: {{ prot.protection_name }}
                  Parameters:
                  {% for k, v in prot.user_friendly.items() %}
                  - {{ k }}: {{ v }}
                  {% endfor %}
              {% endfor %}
              {% else %}
              No Traffic Filter protections were created.
              {% endif %}

              {% if item.response.errors | default([]) %}
              Errors encountered ({{ item.response.errors | length }}):
              {% for err in item.response.errors %}
                - {{ err }}
              {% endfor %}
              {% endif %}
              {% endif %}
              {% endif %}
          ansible.builtin.debug:
            msg: "{{ formatted_output.split('\n') }}"
          loop: "{{ TF_create_results.results }}"
          loop_control:
            label: "Device: {{ item.item }}"

        - name: Apply policy updates per device
          update_policies:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Applying policies: {{ item }}"
          when:
            - not (skip_policy_updates | default(false))
            - TF_create_results is defined
            - TF_create_results.changed | default(false)

      always:
        - name: Unlock device(s)
          dp_unlock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          when: not (skip_device_lock | default(false))

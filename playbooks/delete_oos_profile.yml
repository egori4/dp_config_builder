---
- name: Delete Specific OOS Profiles from DefensePro
  hosts: cc
  gather_facts: no
  vars_files:
    - ../vars/cc.yml
    - ../vars/delete_vars.yml   # contains dp_ip (list of device IPs) and oos_profiles (list of profile names)

  tasks:
    - block:

        # Lock devices
        - name: Lock device(s)
          dp_lock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Device: {{ item }}"
          when: not (skip_device_lock | default(false))

        # Delete OOS profiles
        - name: Delete OOS profiles from devices
          delete_oos_profile:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
            oos_profiles: "{{ oos_profiles | map(attribute='name') | list }}"
            verify: true
          loop: "{{ dp_ip }}"
          register: OOS_delete_results
          loop_control:
            label: "Device: {{ item }}"

        # Display deletion results with color highlighting
        - name: Display deletion results
          vars:
            formatted_output: |
              {% for result in OOS_delete_results.results %}
              Device: {{ result.item }}
              {% for profile_info in result.response %}
                {% set status = profile_info.get('response', {}).get('status', 'deleted') %}
                {% if profile_info.get('failed') %}
                  Profile: {{ profile_info.profile }} 
                  Error: {{ profile_info.get('response', {}).get('error', 'Unknown') }}
                {% else %}
                  Profile: {{ profile_info.profile }} was deleted successfully
                {% endif %}
              {% endfor %}
              {% endfor %}
          debug:
            msg: "{{ formatted_output.split('\n') }}"

        - name: Apply policy updates per device
          update_policies:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Applying policies: {{ item }}"
          when: 
            - not (skip_policy_updates | default(false))
            - OOS_delete_results is defined
            - OOS_delete_results.changed | default(false)

      always:

        # Unlock devices
        - name: Unlock device(s)
          dp_unlock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Device: {{ item }}"
          when: not (skip_device_lock | default(false))

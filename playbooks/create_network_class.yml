---
- name: Create network classes (Unified)
  hosts: cc
  gather_facts: no
  vars_files:
    - ../vars/cc.yml
    - ../vars/create_vars.yml

  tasks:
    - block:
        - name: Lock device(s)
          dp_lock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          when: not (skip_device_lock | default(false))

        - name: Create network classes and groups
          create_network_class:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
            netclasses: "{{ netclasses | default([]) }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Device: {{ item }}"
          register: create_results

        - name: Display creation results (formatted)
          vars:
            formatted_output: |
              Device: {{ item.item }}
              {% if item.response.preview_mode | default(false) %}
              PREVIEW MODE - Operations that would be performed:
              {% set planned_ops = item.response.planned_operations | default([]) %}
              {% if planned_ops %}
              
              Network Group Creations ({{ planned_ops | length }} planned):
              {% for op in planned_ops %}
                - {{ op.description }}
              {% endfor %}
              {% else %}
              
              No network classes configured for creation.
              {% endif %}
              {% else %}
              EXECUTION RESULTS:
              {% set created_groups = item.response.created_groups | default([]) %}
              {% set errors = item.response.errors | default([]) %}
              {% set summary = item.response.summary | default({}) %}
              {% if created_groups %}
              
              Network Groups ({{ summary.successful_groups | default(0) }}/{{ summary.total_groups_attempted | default(0) }} successful):
              {% for group in created_groups %}
              {% if group.status == 'success' %}
                -  {{ group.class_name }}[{{ group.index }}]: {{ group.address }}/{{ group.mask }}
              {% else %}
                -  {{ group.class_name }}[{{ group.index }}]: {{ group.address }}/{{ group.mask }} ({{ group.error | default('Unknown error') }})
              {% endif %}
              {% endfor %}
              {% endif %}
              {% if errors %}
              
              Errors ({{ errors | length }} occurred):
              {% for error in errors %}
                - {{ error }}
              {% endfor %}
              {% endif %}
              {% if not created_groups and not errors %}
              
              No network classes configured for creation.
              {% endif %}
              {% endif %}
          debug:
            msg: "{{ formatted_output.split('\n') }}"
          loop: "{{ create_results.results }}"
          loop_control:
            label: "Device: {{ item.item }}"

        - name: "Apply policy updates per device"
          update_policies:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          loop_control:
            label: "Applying policies: {{ item }}"
          when: 
            - not (skip_policy_updates | default(false))
            - create_results is defined
            - create_results.changed | default(false)

      always:
        - name: Unlock device(s)
          dp_unlock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
          when: not (skip_device_lock | default(false))
